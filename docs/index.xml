<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeuroDesk – Documentation</title><link>https://neurodesk.github.io/docs/</link><description>Recent content in Documentation on NeuroDesk</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://neurodesk.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Linux</title><link>https://neurodesk.github.io/docs/neurocommand/getting-started/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurocommand/getting-started/linux/</guid><description>
&lt;h2 id="requirements">Requirements:&lt;/h2>
&lt;h3 id="required">Required&lt;/h3>
&lt;ul>
&lt;li>python 3.6+ &lt;a href="https://docs.conda.io/en/latest/miniconda.html#linux-installers">https://docs.conda.io/en/latest/miniconda.html#linux-installers&lt;/a>&lt;/li>
&lt;li>singularity &lt;a href="https://sylabs.io/guides/3.5/user-guide/quick_start.html">https://sylabs.io/guides/3.5/user-guide/quick_start.html&lt;/a>&lt;/li>
&lt;li>git&lt;/li>
&lt;/ul>
&lt;h3 id="optional">Optional&lt;/h3>
&lt;ul>
&lt;li>lmod &lt;a href="https://sylabs.io/guides/3.5/user-guide/quick_start.html">https://lmod.readthedocs.io/en/latest/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="command-line-mode---for-non-desktop-experience-eg-running-on-an-hpc">command line mode - For non-desktop experience (e.g. running on an HPC)&lt;/h3>
&lt;p>If running on cli only &amp;hellip;&lt;/p>
&lt;ul>
&lt;li>Load singularity and for best performance it should be 3.x e.g. &lt;code>module load singularity/3.5.0&lt;/code>&lt;/li>
&lt;li>Load or install aria2 to optimize the download performance of our containers e.g. &lt;code>module load aria2c&lt;/code>&lt;/li>
&lt;li>make sure the current directory is not a symlink (singularity bug): &lt;code>pwd -P&lt;/code> and then cd there&lt;/li>
&lt;li>Run &lt;code>git clone https://github.com/NeuroDesk/neurocommand.git&lt;/code> to clone the repository - make sure to clone this to a directory with enough storage, write permissions and NOT a symbolic link (to be sure run cd `pwd -P`)!&lt;/li>
&lt;li>Run &lt;code>cd neurocommand&lt;/code> to change into the directory&lt;/li>
&lt;li>Run &lt;code>pip3 install -r neurodesk/requirements.txt --user&lt;/code> to install pre-requisite python packages&lt;/li>
&lt;li>Run &lt;code>bash build.sh --cli&lt;/code> to install in cli mode&lt;/li>
&lt;li>Run &lt;code>bash containers.sh&lt;/code> for installing indiviual containers or &lt;code>bash containers.sh --all&lt;/code> for installing all containers&lt;/li>
&lt;li>Run &lt;code>module use $PWD/local/containers/modules/&lt;/code> to add the containers to your module search path. Add this to your .bashrc if working.&lt;/li>
&lt;li>Run &lt;code>ml avail&lt;/code> to see the installed containers at the top of the list (neurodesk containers will take preference over system modules with the same name). If a container is not yet there run &lt;code>ml --ignore_cache avail&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="for-lxde-desktops">For Lxde desktops&lt;/h3>
&lt;p>If running on an lxde desktop&amp;hellip;
Run &lt;code>bash build.sh --lxde --edit&lt;/code>&lt;/p>
&lt;h3 id="for-mate-desktops">For Mate desktops&lt;/h3>
&lt;p>Run &lt;code>bash build.sh --init&lt;/code> (or &lt;code>bash build.sh --lxde --edit&lt;/code>)&lt;br>
lxde/mate: Mate&lt;br>
installdir: Where all the neurocommand files will be stored (Default: ./local)&lt;br>
appmenu: The linux menu xml file. (Usually /etc/xdg/menus/****-applications.menu)&lt;br>
appdir: Location for the .desktop files for this linux desktop (Usually /usr/share/applications)&lt;br>
deskdir: Location for the .directory files for this linux desktop (Typically /usr/share/desktop-directories)&lt;/p>
&lt;h3 id="for-desktop-menus">For desktop menus:&lt;/h3>
&lt;p>&lt;code>sudo bash install.sh&lt;/code> to install&lt;br>
&lt;em>Creates symlinks to menu files in installation dir&lt;/em>&lt;/p>
&lt;p>&lt;code>sudo bash uninstall.sh&lt;/code> to uninstall&lt;br>
&lt;em>Removes symlinks&lt;/em>&lt;/p>
&lt;h2 id="to-update">To update&lt;/h2>
&lt;p>Run &lt;code>git pull&lt;/code>&lt;br>
Run &lt;code>bash build.sh&lt;/code>&lt;br>
&lt;em>install.sh does not need to be run again&lt;/em>&lt;/p>
&lt;h3 id="to-download-all-containers">To download all containers&lt;/h3>
&lt;p>Run &lt;code>bash containers.sh --all&lt;/code>&lt;/p></description></item><item><title>Docs: Linux</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/linux/</guid><description>
&lt;h2 id="minimum-system-requirements">Minimum System Requirements&lt;/h2>
&lt;ol>
&lt;li>At least 3GB free space for neurodesktop base image&lt;/li>
&lt;li>Docker requirements. Details found under &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ol>
&lt;li>Install Docker from here: &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>one example to install docker in a yum-based distribution could look like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo dnf install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io
sudo systemctl enable docker
sudo systemctl start docker
sudo docker version
sudo docker info
sudo groupadd docker
sudo usermod -aG docker $USER
sudo chown root:docker /var/run/docker.sock
newgrp docker
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>
&lt;p>Create a local folder where the downloaded applications will be stored, e.g. ~/neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open a terminal, and type the folowing command to automatically download the neurodesktop container and run it (Mac, Windows, Linux commands listed below)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>sudo docker run --shm-size=1gb -it --privileged --name neuromachine -v ~/neurodesktop:/neurodesktop -e USER=user -p 8080:8080 vnmd/neuromachine:latest
&lt;/code>&lt;/pre>&lt;p>(notice: if you get errors in neurodesktop then check if the ~/neurodesktop directory is writable to all users, otherwise run &lt;code>chmod a+rwx ~/neurodesktop&lt;/code>)&lt;/p>
&lt;ol start="4">
&lt;li>Once neurodesktop is downloaded i.e. &lt;code>guacd[77]: INFO: Listening on host 127.0.0.1, port 4822&lt;/code> is displayed in terminal, open a browser and go to:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>http://localhost:8080/#/?username=user&amp;amp;password=password
&lt;/code>&lt;/pre>&lt;p>or open a VNC Client and connect to port 5901 (for this -p 5901:5901 has to be added to the docker call)&lt;/p>
&lt;ol start="5">
&lt;li>neurodesktop is ready to use!&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>User is &lt;code>user&lt;/code>&lt;/li>
&lt;li>Password is &lt;code>password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="stopping-neurodesktop">Stopping neurodesktop:&lt;/h2>
&lt;p>When done processing your data it is important to stop and remove the container - otherwise the next start or container update will give an error (&amp;quot;&amp;hellip; The container name &amp;ldquo;/neurodesktop&amp;rdquo; is already in use&amp;hellip;&amp;quot;)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Click on the terminal from which you ran neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press control-C&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Type:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker stop neuromachine
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Type:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker rm neuromachine
&lt;/code>&lt;/pre></description></item><item><title>Docs: Neurodesk Architecture</title><link>https://neurodesk.github.io/docs/for-developers/neurodesk-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/for-developers/neurodesk-architecture/</guid><description>
&lt;h1 id="layers">Layers&lt;/h1>
&lt;p>Neurodesktop: &lt;a href="https://github.com/NeuroDesk/neurodesktop">https://github.com/NeuroDesk/neurodesktop&lt;/a>&lt;/p>
&lt;ul>
&lt;li>docker container with interface modifications&lt;/li>
&lt;li>contains tools necessary to manage containers: vscode, git, niype&lt;/li>
&lt;li>CI: builds docker image and tests if it runs&lt;/li>
&lt;/ul>
&lt;p>Neurocommand: &lt;a href="https://github.com/NeuroDesk/neurocommand">https://github.com/NeuroDesk/neurocommand&lt;/a>&lt;/p>
&lt;ul>
&lt;li>script to install and manage multiple containers using transparent singularity on any linux system&lt;/li>
&lt;li>this repo would also handle the creation of menu entries in a general form applicable to different desktop environments&lt;/li>
&lt;li>this repo can be re-used in other projects like CVL and the imaging workstations&lt;/li>
&lt;li>CI: tests if containers can be installed&lt;/li>
&lt;/ul>
&lt;p>transparent-singularity: &lt;a href="https://github.com/NeuroDesk/transparent-singularity">https://github.com/NeuroDesk/transparent-singularity&lt;/a>&lt;/p>
&lt;ul>
&lt;li>script to install neuro-sub-containers, installers are called by neurodesk script&lt;/li>
&lt;li>this repo could provide a simple way of using our containers on HPCs for large scale processing of the pipelines build in VNM&lt;/li>
&lt;li>CI: test if exposing of binaries work&lt;/li>
&lt;/ul>
&lt;p>Neurocontainers: &lt;a href="https://github.com/NeuroDesk/neurocontainers">https://github.com/NeuroDesk/neurocontainers&lt;/a>&lt;/p>
&lt;ul>
&lt;li>build scripts for neuro-sub-containers&lt;/li>
&lt;li>CI: building, pushing and testing of containers&lt;/li>
&lt;/ul>
&lt;p>Neurodocker: &lt;a href="https://github.com/NeuroDesk/neurodocker">https://github.com/NeuroDesk/neurodocker&lt;/a>&lt;/p>
&lt;ul>
&lt;li>fork of neurodocker project&lt;/li>
&lt;li>provides recipes for our containers built&lt;/li>
&lt;li>we are providing pull requests back of recipes&lt;/li>
&lt;li>CI: handled by &lt;a href="https://github.com/ReproNim/neurodocker">neurodocker&lt;/a> - testing of generating container recipes&lt;/li>
&lt;/ul></description></item><item><title>Docs: MacOS</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/mac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/mac/</guid><description>
&lt;h2 id="minimum-system-requirements">Minimum System Requirements&lt;/h2>
&lt;ol>
&lt;li>At least 3GB free space for neuromachine base image&lt;/li>
&lt;li>Docker requirements. Details found under &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Install Docker from here: &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a local folder where the downloaded applications will be stored, e.g. ~/neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open a terminal, and type the folowing command to automatically download the neurodesktop container and run it&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker run --shm-size=1gb -it --privileged --name neuromachine -v ~/neurodesktop:/neurodesktop -e USER=user -p 8080:8080 vnmd/neuromachine:latest
&lt;/code>&lt;/pre>&lt;p>(notice: There is a bug in docker 3.3.0 for Mac that makes this command not run correctly and there will be no application menu when you start the desktop. Update your docker version when you see this!)&lt;/p>
&lt;p>if you get errors in neurodesktop then check if the ~/neurodesktop directory is writable to all users, otherwise run &lt;code>chmod a+rwx ~/neurodesktop&lt;/code>&lt;/p>
&lt;ol start="4">
&lt;li>Once neurodesktop is downloaded i.e. &lt;code>guacd[77]: INFO: Listening on host 127.0.0.1, port 4822&lt;/code> is displayed in terminal, open a browser and go to:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>http://localhost:8080/#/?username=user&amp;amp;password=password
&lt;/code>&lt;/pre>&lt;p>or open a VNC Client and connect to port 5901 (for this -p 5901:5901 has to be added to the docker call)&lt;/p>
&lt;ol start="5">
&lt;li>neurodesktop is ready to use!&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>User is &lt;code>user&lt;/code>&lt;/li>
&lt;li>Password is &lt;code>password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="stopping-neurodesktop">Stopping neurodesktop:&lt;/h2>
&lt;p>When done processing your data it is important to stop and remove the container - otherwise the next start or container update will give an error (&amp;quot;&amp;hellip; The container name &amp;ldquo;/neurodesktop&amp;rdquo; is already in use&amp;hellip;&amp;quot;)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Click on the terminal from which you ran neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press control-C&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Type:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker stop neuromachine
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Type:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker rm neuromachine
&lt;/code>&lt;/pre></description></item><item><title>Docs: Troubleshooting</title><link>https://neurodesk.github.io/docs/neurocommand/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurocommand/troubleshooting/</guid><description>
&lt;p>Neurodesk is an open-source project that is always evolving. If you are experiencing an issue not listed here, please open a &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/issues">new issue&lt;/a>, so that we can aim to solve it and update our help documentation.&lt;/p>
&lt;p>To ask questions or suggest new features, &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/discussions">join the discussion&lt;/a> on github.&lt;/p></description></item><item><title>Docs: What's next?</title><link>https://neurodesk.github.io/docs/neurodesktop/whats-next/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/whats-next/</guid><description>
&lt;p>Now that you’ve installed and launched neurodesktop, you should see a virtual desktop environment in your browser, which might look something like this:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/Desktop.png" alt="desktop" title="desktop">&lt;/p>
&lt;p>In this linux desktop environment, you can access the menu, launch programs, write analysis code, use version control software (i.e. git) and develop analysis pipelines as though you were on your own computer.&lt;/p>
&lt;h2 id="release">Release&lt;/h2>
&lt;p>Keep a note of the release date of the container image that you installed. Regardless of what operating system you installed neurodesktop into, the release date would have been at the end of the &lt;em>docker run&lt;/em> command:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/version.png" alt="version" title="version">&lt;/p>
&lt;p>We regularly update neurodesktop to make sure it’s running well and has up-to-date software. You can check the &lt;a href="https://neurodesk.github.io/docs/neurodesktop/release-history/">Release History&lt;/a> page for details of previous releases. If you’d like to update your container at any time, simply switch out the release number for the version you would like. If you’ve finished working on an analysis pipeline and would like to share it with others, you can point them toward the stable release number that you worked in. That way anyone, on any computer around the world can replicate your analysis pipeline in the exact same computing environment that you developed it in.&lt;/p>
&lt;h2 id="video-tutorial">Video tutorial&lt;/h2>
&lt;p>Click &lt;a href="https://www.youtube.com/watch?v=JLv_5fycugw">here&lt;/a> to watch a 2 minute tutorial video from OHBM 2021&lt;/p>
&lt;h2 id="how-to-access-files-from-your-host-computer">How to access files from your Host computer&lt;/h2>
&lt;p>There are various ways of connecting your data to to Neurodesktop. For more information see our Storage section: &lt;a href="https://neurodesk.github.io/docs/neurodesktop/storage.md">Storage&lt;/a>&lt;/p>
&lt;h2 id="how-to-launchdownload-applications">How to launch/download applications&lt;/h2>
&lt;p>Click on the Launcher icon in bottom-left corner and navigate to the &amp;ldquo;Neurodesk&amp;rdquo; menu, then select the application and version you wish to launch. If it is the first time you launch the application, it will be downloaded to your desktop environment. The application is ready to use when the &amp;ldquo;Singularity&amp;gt;&amp;rdquo; prompt appears in the terminal window that opens. If you chose in the menu the GUI of the application (e.g., fsleyesGUI 6.0.3), it will open automatically. If you chose that application itself (e.g., fsl 6.0.3), a terminal window will open, and you can use it to run any of the utilities packaged with the application, including the graphical utilities (e.g., typing &amp;ldquo;fsl&amp;rdquo; to run FSL&amp;rsquo;s main menu).&lt;/p></description></item><item><title>Docs: Windows</title><link>https://neurodesk.github.io/docs/neurocommand/getting-started/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurocommand/getting-started/windows/</guid><description>
&lt;h2 id="wsl-w-ubuntu--lxde">WSL (w/ Ubuntu + LXDE)&lt;/h2>
&lt;p>For more information on WSL: &lt;a href="https://docs.microsoft.com/en-us/windows/wsl">https://docs.microsoft.com/en-us/windows/wsl&lt;/a>&lt;/p>
&lt;h3 id="setting-up">Setting up&lt;/h3>
&lt;ol>
&lt;li>Setup WSL2 using the following instructions &lt;em>(Ubuntu 18.04 recommended)&lt;/em>&lt;br>
&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">https://docs.microsoft.com/en-us/windows/wsl/install-win10&lt;/a>
&lt;em>Proceed until a Ubuntu bash shell is available from the Windows Host&lt;/em>&lt;br>
&lt;em>Run the remaining commands in the Bash shell&lt;/em>&lt;/li>
&lt;li>&lt;code>sudo apt-get install lxde&lt;/code> to install LXDE desktop in WSL&lt;/li>
&lt;li>Reboot&lt;/li>
&lt;li>&lt;code>sudo apt-get install xrdp&lt;/code> to install XRDP in WSL&lt;/li>
&lt;li>Open &lt;code>/etc/xrdp/xrdp.ini&lt;/code>
Change &lt;code>port=3389&lt;/code> to &lt;code>port=3390&lt;/code> and save&lt;/li>
&lt;li>Run &lt;code>echo startlxde &amp;gt; ~/.xsession&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="running">Running&lt;/h3>
&lt;ol>
&lt;li>&lt;code>sudo service xrdp start&lt;/code> to start xrdp server&lt;/li>
&lt;li>Open Microsoft Remote Desktop Connection in Windows host&lt;/li>
&lt;li>Connect to &lt;code>localhost:3390&lt;/code>&lt;/li>
&lt;li>In the next login page, leave Session as &lt;code>Xorg&lt;/code>. Enter your WSL username and password and click &lt;code>OK&lt;/code>&lt;/li>
&lt;li>This should open an LXDE Linux Desktop environment. Follow &lt;a href="https://neurodesk.github.io/docs/neurocommand/getting-started/linux">Linux guide&lt;/a> from here on&lt;/li>
&lt;/ol></description></item><item><title>Docs: What's in the box?</title><link>https://neurodesk.github.io/docs/neurodesktop/whatsinthebox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/whatsinthebox/</guid><description>
&lt;p>Neurodesktop comes with the essential software required for neuroimaging data analysis pre-installed. Each release is built with the most recent version of these packages available at the build date. Some example packages include:&lt;/p>
&lt;ul>
&lt;li>Editors and Programming:
&lt;ul>
&lt;li>Visual Studio Code&lt;/li>
&lt;li>Emacs&lt;/li>
&lt;li>Gedit&lt;/li>
&lt;li>Vim&lt;/li>
&lt;li>Python&lt;/li>
&lt;li>Git&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Workflow systems:
&lt;ul>
&lt;li>Nipype (including GraphVis)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Data Syncronisation tools: (See our Storage section for more information: )
&lt;ul>
&lt;li>Rsync&lt;/li>
&lt;li>Rclone &lt;a href="https://rclone.org/">https://rclone.org/&lt;/a>&lt;/li>
&lt;li>Nextcloud client&lt;/li>
&lt;li>Owncloud client&lt;/li>
&lt;li>Globus personal connect &lt;a href="https://docs.globus.org/how-to/globus-connect-personal-linux/">https://docs.globus.org/how-to/globus-connect-personal-linux/&lt;/a>
&lt;ul>
&lt;li>installed in /opt/globusconnectpersonal/&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>System Management:
&lt;ul>
&lt;li>Lmod (inlcuding Lua)&lt;/li>
&lt;li>Singularity&lt;/li>
&lt;li>Htop&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Misc
&lt;ul>
&lt;li>Imagemagic&lt;/li>
&lt;li>Firefox&lt;/li>
&lt;li>OpenSSH client&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The neurodesktop environment is built to be light and fast to download and start-up. Most additional programs are therefore downloaded when they are first used. A list of these additional packages can be found &lt;a href="https://github.com/NeuroDesk/neurodesk/blob/master/cvmfs/log.txt">here&lt;/a>&lt;/p></description></item><item><title>Docs: Windows</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/windows/</guid><description>
&lt;h2 id="minimum-system-requirements">Minimum System Requirements&lt;/h2>
&lt;ol>
&lt;li>At least 3GB free space for neuromachine base image&lt;/li>
&lt;li>Docker requirements. Details found under &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;li>If installing docker using WSL, atleast 20GB space recommended for WSL with Ubuntu&lt;/li>
&lt;/ol>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Install Docker from here: &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a local folder where the downloaded applications will be stored, e.g. C:\neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open a terminal, and type the folowing command to automatically download the neurodesktop container and run it&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker run --shm-size=1gb -it --privileged --name neuromachine -v C:/neurodesktop:/neurodesktop -e USER=user -p 8080:8080 vnmd/neuromachine:20210708
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Once neuromachine is downloaded i.e. &lt;code>guacd[77]: INFO: Listening on host 127.0.0.1, port 4822&lt;/code> is displayed in terminal, open a browser and go to:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>http://localhost:8080/#/?username=user&amp;amp;password=password
&lt;/code>&lt;/pre>&lt;p>or open a VNC Client and connect to port 5901 (for this -p 5901:5901 has to be added to the docker call)&lt;/p>
&lt;ol start="5">
&lt;li>neurodesktop is ready to use!&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>User is &lt;code>user&lt;/code>&lt;/li>
&lt;li>Password is &lt;code>password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="stopping-neurodesktop">Stopping neurodesktop:&lt;/h2>
&lt;p>When done processing your data it is important to stop and remove the container - otherwise the next start or container update will give an error (&amp;quot;&amp;hellip; The container name &amp;ldquo;/neurodesktop&amp;rdquo; is already in use&amp;hellip;&amp;quot;)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Click on the terminal from which you ran neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press control-C&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Type:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker stop neuromachine
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Type:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker rm neuromachine
&lt;/code>&lt;/pre></description></item><item><title>Docs: Add tool</title><link>https://neurodesk.github.io/docs/advanced/add_tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/advanced/add_tool/</guid><description>
&lt;p>The goal of &lt;em>neurodesktop&lt;/em> is to provide users with a large choice of tools to use in their pipelines.
Use the guide below to add a tool to &lt;em>neurodesktop&lt;/em>.&lt;/p>
&lt;h2 id="guiding-principles">Guiding principles&lt;/h2>
&lt;p>To decide if a tool should be packaged in a singularity container or be installed in the main neurodesktop container we are currently following these guiding principles:&lt;/p>
&lt;ol>
&lt;li>Neurodesktop is not a package manager. This means we are not distributing tools in containers that can easily be installed via a standard package manager&lt;/li>
&lt;li>Neurodesktop allows users to have multiple versions of tools in parallel via &lt;a href="https://lmod.readthedocs.io/en/latest/">lmod&lt;/a>, this means that if different versions of tool can&amp;rsquo;t be installed in parallel we package the tool inside a container.&lt;/li>
&lt;li>Neurodesktop aims to provide simple tooling to link tools from different containers. This means that if a tool is required to coordinate container-tools, it should be in the main image.&lt;/li>
&lt;/ol>
&lt;p>Examples:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>easy install&lt;/th>
&lt;th>coordinates containers&lt;/th>
&lt;th>small in size&lt;/th>
&lt;th>latest version is ok&lt;/th>
&lt;th>useful more most users&lt;/th>
&lt;th>Conclusion&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>base&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lmod&lt;/td>
&lt;td>no&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>base&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nipype&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>base&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>vscode&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>base&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>itksnap&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>container -&amp;gt; could be in base?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>matlab&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container due to size?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>convert3D&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fsl&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mrtrix&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>freesurfer&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="build-container">Build container&lt;/h2>
&lt;p>To build a container:&lt;/p>
&lt;ol>
&lt;li>Add recipe to neurodocker if relevant (&lt;a href="https://github.com/NeuroDesk/neurodocker">https://github.com/NeuroDesk/neurodocker&lt;/a>) and create a pull request to neurodocker&lt;/li>
&lt;li>Build the container &lt;a href="https://github.com/NeuroDesk/caid">here&lt;/a>&lt;/li>
&lt;li>Test the container, and if successful add the container to the Readme table &lt;a href="https://github.com/NeuroDesk/neurodesk">here&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="menu-entry">Menu entry&lt;/h2>
&lt;p>As we want to propose several versions of the tools, each piece of software should have its own submenu under &lt;code>VNM Neuroimaging&lt;/code>.
To do so, you first have to add a submenu to &lt;code>menus/vnm-applications.menu&lt;/code> by adding:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;!-- [[Tool Name]] submenu --&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Menu&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Name&amp;gt;&lt;/span>[[Tool Name]]&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Directory&amp;gt;&lt;/span>vnm-[[tool-name]].directory&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Directory&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Include&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;And&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Category&amp;gt;&lt;/span>[[Tool-Name]]&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Category&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/And&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Include&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Menu&amp;gt;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;!-- End [[Tool Name]] --&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following table shows the formatting rules to follow:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Placeholder&lt;/th>
&lt;th>Rule&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>[[Tool name]]&lt;/code>&lt;/td>
&lt;td>Capitalized, spaces&lt;/td>
&lt;td>&lt;code>ITK snap&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[[tool-name]]&lt;/code>&lt;/td>
&lt;td>Lower case, no spaces (use &lt;code>-&lt;/code> instead)&lt;/td>
&lt;td>&lt;code>itk-snap&lt;/code> or &lt;code>itksnap&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[[Tool-name]]&lt;/code>&lt;/td>
&lt;td>Capitalized, no spaces (use &lt;code>-&lt;/code> instead)&lt;/td>
&lt;td>&lt;code>ITK-snap&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Next, we have to create the submenu itself as we referenced it by &lt;code>vnm-[[tool-name]].directory&lt;/code>. To do so, create the file &lt;code>menus/submenus/vnm-[[tool-name]].directory&lt;/code> and add the following information inside:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#204a87;font-weight:bold">[Desktop Entry]&lt;/span>
&lt;span style="color:#c4a000">Name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]]&lt;/span>
&lt;span style="color:#c4a000">Comment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]]&lt;/span>
&lt;span style="color:#c4a000">Icon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/home/neuro/.config/lxpanel/LXDE/icons/[[icon-name]].png&lt;/span>
&lt;span style="color:#c4a000">Type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Directory&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If a specific icon is available in the &lt;code>menus/icons&lt;/code> directory, replace &lt;code>[[icon-name]]&lt;/code> by its name. Otherwise, use &lt;code>vnm&lt;/code>.&lt;/p>
&lt;h2 id="create-the-application">Create the application&lt;/h2>
&lt;p>Finally, we have to create the actual application by creating the file &lt;code>menus/applications/vnm-[[tool-name]]-[[0.0.0]].desktop&lt;/code>. The name of this file must contain the version of the tool (once again to allow multiple versions to live inside the same directory). Add the following description to this file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#204a87;font-weight:bold">[Desktop Entry]&lt;/span>
&lt;span style="color:#c4a000">Name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]] [[0.0.0]] [[(Install only)]]&lt;/span>
&lt;span style="color:#c4a000">GenericName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]] [[0.0.0]]&lt;/span>
&lt;span style="color:#c4a000">Comment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">The description of what clicking on this application does. # This will be the tooltip of the application.&lt;/span>
&lt;span style="color:#c4a000">Exec&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">The command used to run the application.&lt;/span>
&lt;span style="color:#c4a000">Icon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/home/neuro/.config/lxpanel/LXDE/icons/[[icon-name]].png&lt;/span>
&lt;span style="color:#c4a000">Type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Application&lt;/span>
&lt;span style="color:#c4a000">Categories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool-name]]&lt;/span>
&lt;span style="color:#c4a000">Terminal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true # or false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The important part here is the value of &lt;code>Exec&lt;/code>. If the tool is in the form of a singularity image, you should run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">bash /usr/share/fetch_and_run.sh &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>tool-name&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>0.0.0&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>YYYYMMDD&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>cmd&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>args&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>What &lt;code>fetch_and_run.sh&lt;/code> does is check if the image is already installed as a module. If not, it checks whether it can be installed or not (return &lt;code>1&lt;/code> if not possible). After that, it installs the image as a module.
If &lt;code>[[cmd]]&lt;/code> is specified, once the image is installed, it runs the command by giving the arguments from &lt;code>[[args]]&lt;/code>.
Here are two examples for FreeSurfer and FreeView. This first one only installs the image as a module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">bash /usr/share/fetch_and_run.sh freesurfer 6.0.1 &lt;span style="color:#0000cf;font-weight:bold">20200506&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And this does the same but runs FreeView afterward:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">bash /usr/share/fetch_and_run.sh freesurfer 6.0.1 &lt;span style="color:#0000cf;font-weight:bold">20200506&lt;/span> freeview
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The resulting &lt;code>.desktop&lt;/code> file corresponding to FreeView contains:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#204a87;font-weight:bold">[Desktop Entry]&lt;/span>
&lt;span style="color:#c4a000">Name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">FreeView 6.0.1&lt;/span>
&lt;span style="color:#c4a000">GenericName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">FreeView 6.0.1&lt;/span>
&lt;span style="color:#c4a000">Comment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Start FreeView 6.0.1&lt;/span>
&lt;span style="color:#c4a000">Exec&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">bash /usr/share/fetch_and_run.sh freesurfer 6.0.1 20200506 freeview&lt;/span>
&lt;span style="color:#c4a000">Icon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/home/neuro/.config/lxpanel/LXDE/icons/run.png&lt;/span>
&lt;span style="color:#c4a000">Type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Application&lt;/span>
&lt;span style="color:#c4a000">Categories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">FreeSurfer&lt;/span>
&lt;span style="color:#c4a000">Terminal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: HPC</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/hpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/hpc/</guid><description>
&lt;p>One way of running this project on HPCs is via &lt;a href="https://neurodesk.github.io/docs/neurocommand/getting-started/linux/">https://neurodesk.github.io/docs/neurocommand/getting-started/linux/&lt;/a>&lt;/p></description></item><item><title>Docs: Storage</title><link>https://neurodesk.github.io/docs/neurodesktop/storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/storage/</guid><description>
&lt;h2 id="cloud-storage">Cloud-storage&lt;/h2>
&lt;p>The easiest way to get your data into Neurodesktop is to use a cloud storage provider like CloudStor, Dropbox, OneDrive and their sync tools like OwnCloud, Nextcloud or very flexible tools like rclone. Another good option could be to utilize Globus for large amounts of data.&lt;/p>
&lt;h2 id="mounting-network-storage-on-your-host-computer">Mounting network storage on your host-computer&lt;/h2>
&lt;p>The -v C:/neurodesk:/neurodesk part of the docker command links the directory “neurodesk” on the “C drive” of your Windows computer to the directory /neurodesk inside the Desktop environment. Everything you store in there will be available inside neurodesk and on the host computer. You can also mount additional directories by adding another -v parameter set (e.g. -v D:/moredata:/data) - this will mount the directory moredata from your D drive to /data inside neurodesktop. If you have network storage mounted in a similar way you can also pass this into the Neurodesktop tool.&lt;/p>
&lt;h2 id="mount-volume-using-sshfs">Mount volume using SSHFS&lt;/h2>
&lt;p>It is theoretically possible to mount an SSH target inside Neurodesktop, but it&amp;rsquo;s not a very reliable way of mounting storage:
&lt;code>sshfs -o allow_root USER@TARGET_HOST:TARGET_PATH SOURCE_PATH&lt;/code>&lt;/p></description></item><item><title>Docs: System Testing</title><link>https://neurodesk.github.io/docs/advanced/tested/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/advanced/tested/</guid><description>
&lt;h2 id="please-test-and-add-if-working-">Please test and add if working :)&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>hypervisor&lt;/th>
&lt;th>container engine&lt;/th>
&lt;th>build&lt;/th>
&lt;th>client&lt;/th>
&lt;th>who&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>windows 10 Enterprise, build 18363&lt;/td>
&lt;td>wsl2, hyperv&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>vnc, edge&lt;/td>
&lt;td>Steffen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>windows 10 Pro&lt;/td>
&lt;td>wsl2, hyperv&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>Tom&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>windows 10 Home, build 19041&lt;/td>
&lt;td>wsl2, hyperv&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>chrome&lt;/td>
&lt;td>Geeta&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>windows 10 Home, Docker toolbox&lt;/td>
&lt;td>virtualbox&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>chrome&lt;/td>
&lt;td>Geeta&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Debian Bullseye&lt;/td>
&lt;td>&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>firefox&lt;/td>
&lt;td>Jakub&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ubuntu 20.04&lt;/td>
&lt;td>&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>firefox&lt;/td>
&lt;td>Martin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>macOS Catalina (10.15.5)&lt;/td>
&lt;td>&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>firefox, safari, chrome&lt;/td>
&lt;td>Jakub&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HPC Centos 6&lt;/td>
&lt;td>&lt;/td>
&lt;td>singularity&lt;/td>
&lt;td>no&lt;/td>
&lt;td>&lt;/td>
&lt;td>Steffen&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ubuntu 18.04 on OpenStack (NECTAR)&lt;/td>
&lt;td>&lt;/td>
&lt;td>docker&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>firefox&lt;/td>
&lt;td>Oren&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="run-neurodesk-vnm-for-free-on-cloud-providers">Run Neurodesk VNM for free on cloud providers&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mri.sbollmann.net/index.php/2020/12/08/run-neurodesk-on-oracle-cloud-free-tier">Oracle OCI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://henryjburg.medium.com/neurodesk-running-on-azure-3e38c590a152">Microsoft Azure&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Troubleshooting</title><link>https://neurodesk.github.io/docs/neurodesktop/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/troubleshooting/</guid><description>
&lt;p>Neurodesk is an open-source project that is always evolving. If you are experiencing an issue not listed here, please open a &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/issues">new issue&lt;/a>, so that we can aim to solve it and update our help documentation.&lt;/p>
&lt;p>To ask questions or suggest new features, &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/discussions">join the discussion&lt;/a> on github.&lt;/p>
&lt;h2 id="windows-users-wsl-not-installed-properly">Windows users: WSL not installed properly&lt;/h2>
&lt;p>The Docker engine relies on the Windows subsystem for Linux (&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">WSL&lt;/a>) to run on a windows machine.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
We recommend the &lt;em>manual&lt;/em> install instructions, as the simplified install requires an upgrade to a preview build of Windows that may be unstable.
&lt;/div>
&lt;p>If WSL is properly installed, the &lt;em>Resources&lt;/em> tab of the Docker settings should look something like this:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/Docker_WSL_correct.png" alt="Docker_WSL_correct" title="Docker_WSL_correct">&lt;/p>
&lt;p>However, if WSL is missing or incorrectly configured, the &lt;em>Resources&lt;/em> tab of the Docker settings may look something like this:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/Docker_WSL_incorrect.png" alt="Docker_WSL_incorrect" title="Docker_WSL_incorrect">&lt;/p>
&lt;p>If this is the case, follow the manual install instructions to install &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">WSL 2&lt;/a> (including installation of Ubuntu through Microsoft Store).&lt;/p>
&lt;h2 id="not-enough-free-space-on-the-partition-in-windows-and-wsl2">Not enough free space on the partition in Windows and WSL2&lt;/h2>
&lt;p>This could help: &lt;a href="https://yjmantilla.github.io/tutorials/wsl2-move-vhdx.html">https://yjmantilla.github.io/tutorials/wsl2-move-vhdx.html&lt;/a>&lt;/p></description></item><item><title>Docs: Cloud</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/cloud/</guid><description>
&lt;h2 id="minimum-system-requirements">Minimum System Requirements&lt;/h2>
&lt;ol>
&lt;li>At least 3GB free space for neuromachine base image&lt;/li>
&lt;li>Docker requirements. Details found under &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ol>
&lt;li>Open an SSH connection to your cloud instance with port forwarding&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>ssh -L 8080:127.0.0.1:8080 opc@133.71.33.71
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>Install Docker from here: &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>one example to install docker in a yum-based distribution could look like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo dnf install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io
sudo systemctl enable docker
sudo systemctl start docker
sudo docker version
sudo docker info
sudo groupadd docker
sudo usermod -aG docker $USER
sudo chown root:docker /var/run/docker.sock
newgrp docker
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>
&lt;p>Create a local folder where the downloaded applications will be stored, e.g. ~/neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open a terminal, and type the folowing command to automatically download the neurodesktop container and run it (Mac, Windows, Linux commands listed below)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>sudo docker run --shm-size=1gb -it --privileged --name neuromachine -v ~/neurodesktop:/neurodesktop -e USER=user -p 8080:8080 vnmd/neuromachine:latest
&lt;/code>&lt;/pre>&lt;p>(notice: if you get errors in neurodesktop then check if the ~/neurodesktop directory is writable to all users, otherwise run &lt;code>chmod a+rwx ~/neurodesktop&lt;/code>)&lt;/p>
&lt;ol start="5">
&lt;li>Once neurodesktop is downloaded i.e. &lt;code>guacd[77]: INFO: Listening on host 127.0.0.1, port 4822&lt;/code> is displayed in terminal, open a browser and go to:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>http://localhost:8080/#/?username=user&amp;amp;password=password
&lt;/code>&lt;/pre>&lt;p>or open a VNC Client and connect to port 5901 (for this -p 5901:5901 has to be added to the docker call)&lt;/p>
&lt;ol start="6">
&lt;li>neurodesktop is ready to use!&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>User is &lt;code>user&lt;/code>&lt;/li>
&lt;li>Password is &lt;code>password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="stopping-neurodesktop">Stopping neurodesktop:&lt;/h2>
&lt;p>When done processing your data it is important to stop and remove the container - otherwise the next start or container update will give an error (&amp;quot;&amp;hellip; The container name &amp;ldquo;/neurodesktop&amp;rdquo; is already in use&amp;hellip;&amp;quot;)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Click on the terminal from which you ran neurodesktop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press control-C&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Type:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker stop neuromachine
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Type:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker rm neuromachine
&lt;/code>&lt;/pre>&lt;h2 id="cloud-provider-specific-tutorials">Cloud-provider specific Tutorials&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Cloud provider&lt;/th>
&lt;th>link&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Oracle&lt;/td>
&lt;td>&lt;a href="https://mri.sbollmann.net/index.php/2020/12/08/run-neurodesk-on-oracle-cloud-free-tier/">https://mri.sbollmann.net/index.php/2020/12/08/run-neurodesk-on-oracle-cloud-free-tier/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Azure&lt;/td>
&lt;td>&lt;a href="https://henryjburg.medium.com/neurodesk-running-on-azure-3e38c590a152">https://henryjburg.medium.com/neurodesk-running-on-azure-3e38c590a152&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Release History</title><link>https://neurodesk.github.io/docs/neurodesktop/release-history/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/release-history/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Coming Soon&lt;/p>
&lt;/div></description></item><item><title>Docs: Demo</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/demo/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This page needs to link to MyBinder demo&lt;/p>
&lt;/div></description></item></channel></rss>