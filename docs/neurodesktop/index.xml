<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeuroDesk – Neurodesktop</title><link>https://neurodesk.github.io/docs/neurodesktop/</link><description>Recent content in Neurodesktop on NeuroDesk</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://neurodesk.github.io/docs/neurodesktop/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Getting Started</title><link>https://neurodesk.github.io/docs/neurodesktop/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/getting-started/</guid><description/></item><item><title>Docs: What's next?</title><link>https://neurodesk.github.io/docs/neurodesktop/whats-next/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/whats-next/</guid><description>
&lt;p>Now that you’ve installed and launched neurodesktop, you should see a virtual desktop environment in your browser, which might look something like this:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/Desktop.png" alt="desktop" title="desktop">&lt;/p>
&lt;p>In this linux desktop environment, you can access the menu, launch programs, write analysis code, use version control software (i.e. git) and develop analysis pipelines as though you were on your own computer.&lt;/p>
&lt;h2 id="release">Release&lt;/h2>
&lt;p>Keep a note of the release date of the container image that you installed. Regardless of what operating system you installed neurodesktop into, the release date would have been at the end of the &lt;em>docker run&lt;/em> command:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/version.png" alt="version" title="version">&lt;/p>
&lt;p>We regularly update neurodesktop to make sure it’s running well and has up-to-date software. You can check the &lt;a href="https://neurodesk.github.io/docs/neurodesktop/release-history/">Release History&lt;/a> page for details of previous releases. If you’d like to update your container at any time, simply switch out the release number for the version you would like. If you’ve finished working on an analysis pipeline and would like to share it with others, you can point them toward the stable release number that you worked in. That way anyone, on any computer around the world can replicate your analysis pipeline in the exact same computing environment that you developed it in.&lt;/p>
&lt;h2 id="video-tutorial">Video tutorial&lt;/h2>
&lt;p>Click &lt;a href="https://www.youtube.com/watch?v=JLv_5fycugw">here&lt;/a> to watch a 2 minute tutorial video from OHBM 2021&lt;/p>
&lt;h2 id="how-to-access-files-from-your-host-computer">How to access files from your Host computer&lt;/h2>
&lt;p>There are various ways of connecting your data to to Neurodesktop. For more information see our Storage section: &lt;a href="https://neurodesk.github.io/docs/neurodesktop/storage">Storage&lt;/a>&lt;/p>
&lt;h2 id="how-to-launch-applications">How to launch applications&lt;/h2>
&lt;p>Click on the Launcher icon in bottom-left corner and navigate to the &amp;ldquo;Neurodesk&amp;rdquo; menu, then select the application and version you wish to launch. If it is the first time you launch the application, it will be downloaded to your desktop environment. The application is ready to use when the &amp;ldquo;Singularity&amp;gt;&amp;rdquo; prompt appears in the terminal window that opens. If you chose in the menu the GUI of the application (e.g., fsleyesGUI 6.0.3), it will open automatically. If you chose that application itself (e.g., fsl 6.0.3), a terminal window will open, and you can use it to run any of the utilities packaged with the application, including the graphical utilities (e.g., typing &amp;ldquo;fsl&amp;rdquo; to run FSL&amp;rsquo;s main menu).&lt;/p>
&lt;h2 id="how-to-force-a-complete-container-download-to-your-system">How to force a complete container download to your system&lt;/h2>
&lt;p>To increase speed and reliability of Neurodesktop we mount the application containers from a CVMFS mount and download only the files required to run your current task. Although we aim to keep everything on there reproducible, there might be a reason that you want to fully download the containers to your system. You can force this behaviour by adding another parameter to the docker call: &lt;code>-e CVMFS_DISABLE=true&lt;/code>&lt;/p>
&lt;p>For windows an example would look like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>docker run --shm-size=1gb -it --privileged --name neurodesktop -v C:/neurodesktop-storage:/neurodesktop-storage -e CVMFS_DISABLE=true -p 8080:8080 neurodesktop:20210917
&lt;/code>&lt;/pre></description></item><item><title>Docs: What's in the box?</title><link>https://neurodesk.github.io/docs/neurodesktop/whatsinthebox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/whatsinthebox/</guid><description>
&lt;p>Neurodesktop comes with the essential software required for neuroimaging data analysis pre-installed. Each release is built with the most recent version of these packages available at the build date. Some example packages include:&lt;/p>
&lt;ul>
&lt;li>Editors and Programming:
&lt;ul>
&lt;li>Visual Studio Code&lt;/li>
&lt;li>Emacs&lt;/li>
&lt;li>Gedit&lt;/li>
&lt;li>Vim&lt;/li>
&lt;li>Python&lt;/li>
&lt;li>Git&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Workflow systems:
&lt;ul>
&lt;li>Nipype (including GraphVis)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Data Syncronisation tools: (See our Storage section for more information: &lt;a href="https://neurodesk.github.io/docs/neurodesktop/storage">Storage&lt;/a>)
&lt;ul>
&lt;li>Rsync&lt;/li>
&lt;li>Rclone &lt;a href="https://rclone.org/">https://rclone.org/&lt;/a>&lt;/li>
&lt;li>Nextcloud client&lt;/li>
&lt;li>Owncloud client&lt;/li>
&lt;li>Globus personal connect &lt;a href="https://docs.globus.org/how-to/globus-connect-personal-linux/">https://docs.globus.org/how-to/globus-connect-personal-linux/&lt;/a>
&lt;ul>
&lt;li>installed in /opt/globusconnectpersonal/&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>System Management:
&lt;ul>
&lt;li>Lmod (inlcuding Lua)&lt;/li>
&lt;li>Singularity&lt;/li>
&lt;li>Htop&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Misc
&lt;ul>
&lt;li>Imagemagic&lt;/li>
&lt;li>Firefox&lt;/li>
&lt;li>OpenSSH client&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The neurodesktop environment is built to be light and fast to download and start-up. Most additional programs are therefore downloaded when they are first used. A list of these additional packages can be found &lt;a href="https://github.com/NeuroDesk/neurodesk/blob/master/cvmfs/log.txt">here&lt;/a>&lt;/p></description></item><item><title>Docs: Storage</title><link>https://neurodesk.github.io/docs/neurodesktop/storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/storage/</guid><description>
&lt;h1 id="cloud-storage">Cloud-storage&lt;/h1>
&lt;p>The easiest way to get your data into Neurodesktop is to use a cloud storage provider like CloudStor, Dropbox, OneDrive and their sync tools like OwnCloud, Nextcloud or very flexible tools like rclone or davfs2. Another good option could be to utilize Globus for large amounts of data.&lt;/p>
&lt;h2 id="nextcloud-and-owncloud-desktop-clients">Nextcloud and Owncloud desktop clients&lt;/h2>
&lt;p>Under the menu item &amp;ldquo;Accessories&amp;rdquo; you can find &amp;ldquo;Nextcloud&amp;rdquo; and &amp;ldquo;ownCloud&amp;rdquo; desktop sync clients that you can configure with your cloud service accounts.&lt;/p>
&lt;p>To connect for example to your AARNET cloudstor account you can start the ownCloud client and enter the Server Address: &lt;code>https://cloudstor.aarnet.edu.au/plus/&lt;/code>&lt;/p>
&lt;p>Then generate an app-password here: &lt;a href="https://cloudstor.aarnet.edu.au/plus/settings/personal?sectionid=security">https://cloudstor.aarnet.edu.au/plus/settings/personal?sectionid=security&lt;/a>&lt;/p>
&lt;h2 id="mounting-webdav-storage-using-davfs2">Mounting webdav storage using davfs2&lt;/h2>
&lt;p>Another option is to directly mount webdav storage. Here is an example how to mount CloudStor into Neurodesktop:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo mount -t davfs https://cloudstor.aarnet.edu.au/plus/remote.php/webdav/ /data/
&lt;/code>&lt;/pre>&lt;p>It then asks you for a username and password, which you can generate here: &lt;a href="https://cloudstor.aarnet.edu.au/plus/settings/personal?sectionid=security">https://cloudstor.aarnet.edu.au/plus/settings/personal?sectionid=security&lt;/a>&lt;/p>
&lt;h2 id="rclone">Rclone&lt;/h2>
&lt;p>Rclone is a command line tool that enables the interaction with various cloud services. Here is an example how to setup rclone with CloudStor Aarnet:&lt;/p>
&lt;ul>
&lt;li>start the configuration in a terminal window &lt;code>rclone config&lt;/code>&lt;/li>
&lt;li>Create a new remote: &lt;code>n&lt;/code>&lt;/li>
&lt;li>Provide a name for the remote: &lt;code>CloudStor&lt;/code>&lt;/li>
&lt;li>For the “Storage” option choose: &lt;code>webdav&lt;/code>&lt;/li>
&lt;li>As “url” set: &lt;code>https://cloudstor.aarnet.edu.au/plus/remote.php/webdav/&lt;/code>&lt;/li>
&lt;li>As “vendor” set OwnCloud: &lt;code>2&lt;/code>&lt;/li>
&lt;li>Set your CloudStor username after generating an access token &lt;a href="https://cloudstor.aarnet.edu.au/plus/settings/personal?sectionid=security">https://cloudstor.aarnet.edu.au/plus/settings/personal?sectionid=security&lt;/a>&lt;/li>
&lt;li>Choose to type in your own password: y&lt;/li>
&lt;li>Enter the Password / Token from the CloudStor App passwords page and confirm it again:&lt;/li>
&lt;li>Leave blank the bearer_token: &lt;code>&amp;lt;hit Enter&amp;gt;&lt;/code>&lt;/li>
&lt;li>No advanced config necessary: &lt;code>&amp;lt;hit Enter&amp;gt;&lt;/code>&lt;/li>
&lt;li>accept the configuration: &lt;code>&amp;lt;hit Enter&amp;gt;&lt;/code>&lt;/li>
&lt;li>Quit the config: &lt;code>q&lt;/code>&lt;/li>
&lt;li>Now we can download data to the HPC easily: &lt;code>rclone copy --progress --transfers 8 CloudStor:/raw-data-for-science-paper .&lt;/code>&lt;/li>
&lt;li>or upload data to CloudStor: &lt;code>rclone copy --progress --transfers 8 . CloudStor:/data-processed&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="globus">Globus&lt;/h2>
&lt;p>We also provide the globus client, so you can transfer large amounts of data between globus endpoints and Neurodesktop. You can configure it by running:&lt;/p>
&lt;pre tabindex="0">&lt;code>/opt/globusconnectpersonal/globusconnectpersonal-*/globusconnectpersonal
&lt;/code>&lt;/pre>&lt;p>Once authenticated you can go to the globus file-manager &lt;a href="https://app.globus.org/file-manager">https://app.globus.org/file-manager&lt;/a> and your neurodesktop instance will be an endpoint for globus.&lt;/p>
&lt;h1 id="mounting-network-storage-on-your-host-computer">Mounting network storage on your host-computer&lt;/h1>
&lt;p>The -v C:/neurodesktop-storage:/neurodesktop-storage part of the docker command links the directory &amp;ldquo;neurodesktop-storage&amp;rdquo; on the “C drive” of your Windows computer to the directory /neurodesktop-storage inside the Desktop environment. Everything you store in there will be available inside the desktop and on the host computer. You can also mount additional directories by adding another -v parameter set (e.g. -v D:/moredata:/data) - this will mount the directory moredata from your D drive to /data inside neurodesktop. If you have network storage mounted in a similar way you can also pass this into the Neurodesktop tool.&lt;/p>
&lt;h1 id="mount-volume-using-sshfs">Mount volume using SSHFS&lt;/h1>
&lt;p>It is theoretically possible to mount an SSH target inside Neurodesktop, but it&amp;rsquo;s not a very reliable way of mounting storage:&lt;/p>
&lt;pre tabindex="0">&lt;code>sshfs -o allow_root USER@TARGET_HOST:TARGET_PATH SOURCE_PATH
&lt;/code>&lt;/pre>&lt;p>A better option is to use &lt;code>scp&lt;/code> and copy data from an SSH endpoint:&lt;/p>
&lt;pre tabindex="0">&lt;code>scp /neurodesk/myfile user@remoteserver:/data/
&lt;/code>&lt;/pre></description></item><item><title>Docs: Troubleshooting</title><link>https://neurodesk.github.io/docs/neurodesktop/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/troubleshooting/</guid><description>
&lt;p>Neurodesk is an open-source project that is always evolving. If you are experiencing an issue not listed here, please open a &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/issues">new issue&lt;/a>, so that we can aim to solve it and update our help documentation.&lt;/p>
&lt;p>To ask questions or suggest new features, &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/discussions">join the discussion&lt;/a> on github.&lt;/p>
&lt;h2 id="windows-users-wsl-not-installed-properly">Windows users: WSL not installed properly&lt;/h2>
&lt;p>The Docker engine relies on the Windows subsystem for Linux (&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">WSL&lt;/a>) to run on a windows machine.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
We recommend the &lt;em>manual&lt;/em> install instructions, as the simplified install requires an upgrade to a preview build of Windows that may be unstable.
&lt;/div>
&lt;p>If WSL is properly installed, the &lt;em>Resources&lt;/em> tab of the Docker settings should look something like this:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/Docker_WSL_correct.png" alt="Docker_WSL_correct" title="Docker_WSL_correct">&lt;/p>
&lt;p>However, if WSL is missing or incorrectly configured, the &lt;em>Resources&lt;/em> tab of the Docker settings may look something like this:&lt;/p>
&lt;p>&lt;img src="https://neurodesk.github.io/Docker_WSL_incorrect.png" alt="Docker_WSL_incorrect" title="Docker_WSL_incorrect">&lt;/p>
&lt;p>If this is the case, follow the manual install instructions to install &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">WSL 2&lt;/a> (including installation of Ubuntu through Microsoft Store).&lt;/p>
&lt;h2 id="not-enough-free-space-on-the-partition-in-windows-and-wsl2">Not enough free space on the partition in Windows and WSL2&lt;/h2>
&lt;p>This could help: &lt;a href="https://yjmantilla.github.io/tutorials/wsl2-move-vhdx.html">https://yjmantilla.github.io/tutorials/wsl2-move-vhdx.html&lt;/a>&lt;/p></description></item><item><title>Docs: Release History</title><link>https://neurodesk.github.io/docs/neurodesktop/release-history/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/neurodesktop/release-history/</guid><description>
&lt;h2 id="20210918">20210918&lt;/h2>
&lt;ul>
&lt;li>added mriqc 0.16.1 and mrtrix 3.0.3&lt;/li>
&lt;/ul>
&lt;h2 id="20210917">20210917&lt;/h2>
&lt;ul>
&lt;li>included more tools for connecting to cloud storage services (rclone, owncloud, nextcloud, davfs2, globus). For more info: &lt;a href="https://neurodesk.github.io/docs/neurodesktop/storage">Storage&lt;/a>&lt;/li>
&lt;li>styling of desktop interface, including background wallpaper and colour scheme in terminal window&lt;/li>
&lt;li>new categories in menu system (visualization) and added more categories to tools&lt;/li>
&lt;/ul>
&lt;h2 id="20210916">20210916&lt;/h2>
&lt;ul>
&lt;li>This is the first version of the newly renamed and rebuild neurodesktop (previously vnm and neuromachine)&lt;/li>
&lt;li>containers are mounted by default from CVMFS, but this can be deactivated by adding &lt;code>-e CVMFS_DISABLE=true&lt;/code> to the docker call&lt;/li>
&lt;/ul></description></item></channel></rss>