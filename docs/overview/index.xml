<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeuroDesk â€“ Overview</title><link>https://neurodesk.github.io/docs/overview/</link><description>Recent content in Overview on NeuroDesk</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://neurodesk.github.io/docs/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Neurodesktop</title><link>https://neurodesk.github.io/docs/overview/neurodesktop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/overview/neurodesktop/</guid><description>
&lt;h2 id="minimum-system-requirements">Minimum System Requirements&lt;/h2>
&lt;ol>
&lt;li>Atleast 3GB free space for neuromachine base image&lt;/li>
&lt;li>Docker requirements. Details found under &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a>&lt;/li>
&lt;li>(Windows Users) If installing docker using WSL, atleast 20GB space recommended for WSL with Ubuntu&lt;/li>
&lt;/ol>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Install Docker from here: &lt;a href="https://docs.docker.com/get-docker/">https://docs.docker.com/get-docker/&lt;/a> (Mac, Windows, Linux; for HPC/supercomputer: &lt;a href="https://github.com/NeuroDesk/neurodesk">https://github.com/NeuroDesk/neurodesk&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a local folder where the downloaded applications will be stored, e.g. ~/vnm in Mac and Linux, or C:\vnm in Windows&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open a terminal, and type the folowing command to automatically download the neuromachine container and run it (Mac, Windows, Linux commands listed below)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Mac:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>docker run --shm-size=1gb -it --privileged --name neuromachine -v ~/vnm:/vnm -e USER=user -p 8080:8080 vnmd/neuromachine:latest
&lt;/code>&lt;/pre>&lt;p>(notice: There is a bug in docker 3.3.0 for Mac that makes this command not run correctly and there will be no application menu when you start the desktop. Update your docker version when you see this!)&lt;/p>
&lt;ul>
&lt;li>Windows:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>docker run --shm-size=1gb -it --privileged --name neuromachine -v C:/vnm:/vnm -e USER=user -p 8080:8080 vnmd/neuromachine:latest
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Linux:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>sudo docker run --shm-size=1gb -it --privileged --name neuromachine -v ~/vnm:/vnm -e USER=user -p 8080:8080 vnmd/neuromachine:latest
&lt;/code>&lt;/pre>&lt;p>(notice: if you get errors in neuromachine then check if the ~/vnm directory is writable to all users, otherwise run &lt;code>chmod a+rwx ~/vnm&lt;/code>)&lt;/p>
&lt;ol start="4">
&lt;li>Once neuromachine is downloaded i.e. &lt;code>guacd[77]: INFO: Listening on host 127.0.0.1, port 4822&lt;/code> is displayed in terminal, open a browser and go to:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>http://localhost:8080/#/?username=user&amp;amp;password=password
&lt;/code>&lt;/pre>&lt;p>or open a VNC Client and connect to port 5901 (for this -p 5901:5901 has to be added to the docker call)&lt;/p>
&lt;ol start="5">
&lt;li>neuromachine is ready to use!&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>User is &lt;code>user&lt;/code>&lt;/li>
&lt;li>Password is &lt;code>password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="stopping-neuromachine">Stopping neuromachine:&lt;/h2>
&lt;p>When done processing your data it is important to stop and remove the container - otherwise the next start or container update will give an error (&amp;quot;&amp;hellip; The container name &amp;ldquo;/neuromachine&amp;rdquo; is already in use&amp;hellip;&amp;quot;)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Click on the terminal from which you ran neuromachine&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press control-C&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Type:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker stop neuromachine
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>Type:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>docker rm neuromachine
&lt;/code>&lt;/pre></description></item><item><title>Docs: Neurocommand</title><link>https://neurodesk.github.io/docs/overview/neurocommand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/overview/neurocommand/</guid><description>
&lt;p>&lt;em>For running Neurodesk in a Docker container, refer to &lt;a href="https://neurodesk.github.io/docs/vnm">https://github.com/NeuroDesk/vnm&lt;/a>&lt;/em>&lt;/p>
&lt;p>Requires a Linux host machine, virtual machine or WSL for Windows.&lt;/p>
&lt;h2 id="linux">Linux&lt;/h2>
&lt;h3 id="requirements">Requirements:&lt;/h3>
&lt;h4 id="required">Required&lt;/h4>
&lt;ul>
&lt;li>python &lt;a href="https://docs.conda.io/en/latest/miniconda.html#linux-installers">https://docs.conda.io/en/latest/miniconda.html#linux-installers&lt;/a>&lt;/li>
&lt;li>singularity &lt;a href="https://sylabs.io/guides/3.5/user-guide/quick_start.html">https://sylabs.io/guides/3.5/user-guide/quick_start.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="optional">Optional&lt;/h4>
&lt;ul>
&lt;li>lmod &lt;a href="https://sylabs.io/guides/3.5/user-guide/quick_start.html">https://lmod.readthedocs.io/en/latest/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="inital-install">Inital install&lt;/h3>
&lt;h4 id="command-line-mode---for-non-desktop-experience-eg-running-on-an-hpc">command line mode - For non-desktop experience (e.g. running on an HPC)&lt;/h4>
&lt;p>If running on cli only &amp;hellip;&lt;/p>
&lt;ul>
&lt;li>Load singularity and for best performance it should be 3.x e.g. &lt;code>module load singularity/3.5.0&lt;/code>&lt;/li>
&lt;li>Run &lt;code>git clone https://github.com/NeuroDesk/neurodesk.git&lt;/code> to clone the repository - make sure to clone this to a directory with enough storage, write permissions and NOT a symbolic link (to be sure run cd `pwd -P`)!&lt;/li>
&lt;li>Run &lt;code>cd neurodesk&lt;/code> to change into the directory&lt;/li>
&lt;li>Run &lt;code>bash build.sh --cli&lt;/code> to install in cli mode&lt;/li>
&lt;li>Run &lt;code>bash containers.sh&lt;/code> for installing indiviual containers or &lt;code>bash containers.sh --all&lt;/code> for installing all containers&lt;/li>
&lt;li>Run &lt;code>module use $PWD/local/containers/modules/&lt;/code> to add the containers to your module search path. Add this to your .bashrc if working.&lt;/li>
&lt;li>Run &lt;code>ml avail&lt;/code> to see the installed containers at the top of the list (neurodesk containers will take preference over system modules with the same name). If a container is not yet there run &lt;code>ml --ignore_cache avail&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="for-lxde-desktops">For Lxde desktops&lt;/h4>
&lt;p>If running on an lxde desktop&amp;hellip;
Run &lt;code>bash build.sh --lxde --edit&lt;/code>&lt;/p>
&lt;h4 id="for-mate-desktops">For Mate desktops&lt;/h4>
&lt;p>Run &lt;code>bash build.sh --init&lt;/code> (or &lt;code>bash build.sh --lxde --edit&lt;/code>)&lt;br>
lxde/mate: Mate&lt;br>
installdir: Where all the neurodesk files will be stored (Default: ./local)&lt;br>
appmenu: The linux menu xml file. (Usually /etc/xdg/menus/****-applications.menu)&lt;br>
appdir: Location for the .desktop files for this linux desktop (Usually /usr/share/applications)&lt;br>
deskdir: Location for the .directory files for this linux desktop (Typically /usr/share/desktop-directories)&lt;/p>
&lt;h4 id="for-desktop-menus">For desktop menus:&lt;/h4>
&lt;p>&lt;code>sudo bash install.sh&lt;/code> to install&lt;br>
&lt;em>Creates symlinks to menu files in installation dir&lt;/em>&lt;/p>
&lt;p>&lt;code>sudo bash uninstall.sh&lt;/code> to uninstall&lt;br>
&lt;em>Removes symlinks&lt;/em>&lt;/p>
&lt;h3 id="to-update">To update&lt;/h3>
&lt;p>Run &lt;code>git pull&lt;/code>&lt;br>
Run &lt;code>bash build.sh&lt;/code>&lt;br>
&lt;em>install.sh does not need to be run again&lt;/em>&lt;/p>
&lt;h4 id="to-download-all-containers">To download all containers&lt;/h4>
&lt;p>Run &lt;code>bash containers.sh --all&lt;/code>&lt;/p>
&lt;h2 id="windows">Windows&lt;/h2>
&lt;h3 id="wsl-w-ubuntu--lxde">WSL (w/ Ubuntu + LXDE)&lt;/h3>
&lt;p>For more information on WSL: &lt;a href="https://docs.microsoft.com/en-us/windows/wsl">https://docs.microsoft.com/en-us/windows/wsl&lt;/a>&lt;/p>
&lt;h4 id="setting-up">Setting up&lt;/h4>
&lt;ol>
&lt;li>Setup WSL2 using the following instructions &lt;em>(Ubuntu 18.04 recommended)&lt;/em>&lt;br>
&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">https://docs.microsoft.com/en-us/windows/wsl/install-win10&lt;/a>
&lt;em>Proceed until a Ubuntu bash shell is available from the Windows Host&lt;/em>&lt;br>
&lt;em>Run the remaining commands in the Bash shell&lt;/em>&lt;/li>
&lt;li>&lt;code>sudo apt-get install lxde&lt;/code> to install LXDE desktop in WSL&lt;/li>
&lt;li>Reboot&lt;/li>
&lt;li>&lt;code>sudo apt-get install xrdp&lt;/code> to install XRDP in WSL&lt;/li>
&lt;li>Open &lt;code>/etc/xrdp/xrdp.ini&lt;/code>
Change &lt;code>port=3389&lt;/code> to &lt;code>port=3390&lt;/code> and save&lt;/li>
&lt;li>Run &lt;code>echo startlxde &amp;gt; ~/.xsession&lt;/code>&lt;/li>
&lt;/ol>
&lt;h4 id="running">Running&lt;/h4>
&lt;ol>
&lt;li>&lt;code>sudo service xrdp start&lt;/code> to start xrdp server&lt;/li>
&lt;li>Open Microsoft Remote Desktop Connection in Windows host&lt;/li>
&lt;li>Connect to &lt;code>localhost:3390&lt;/code>&lt;/li>
&lt;li>In the next login page, leave Session as &lt;code>Xorg&lt;/code>. Enter your WSL username and password and click &lt;code>OK&lt;/code>&lt;/li>
&lt;li>This should open an LXDE Linux Desktop environment. Follow Linux guide from here on&lt;/li>
&lt;/ol>
&lt;h2 id="mac">Mac&lt;/h2>
&lt;p>Currently supported via &lt;a href="https://github.com/NeuroDesk/vnm">VNM&lt;/a>&lt;/p>
&lt;h2 id="advanced-usage">Advanced usage&lt;/h2>
&lt;p>For advanced VNM and Neurodesk installer usage, check &lt;a href="https://neurodesk.github.io/docs/advanced">here&lt;/a>&lt;/p></description></item><item><title>Docs: Neurocontainers</title><link>https://neurodesk.github.io/docs/overview/neurocontainers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/docs/overview/neurocontainers/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page.&lt;/p>
&lt;/div></description></item></channel></rss>