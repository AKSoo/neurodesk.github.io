<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeuroDesk â€“ Developers</title><link>https://neurodesk.github.io/developers/</link><description>Recent content in Developers on NeuroDesk</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://neurodesk.github.io/developers/index.xml" rel="self" type="application/rss+xml"/><item><title>Developers: Add tools</title><link>https://neurodesk.github.io/developers/new_tools/add_tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/developers/new_tools/add_tool/</guid><description>
&lt;p>The goal of &lt;em>neurodesk&lt;/em> is to provide users with a large choice of tools to use in their pipelines.
Use the guide below to add a tool to &lt;em>neurodesktop&lt;/em> or &lt;em>neurocontainers&lt;/em>.&lt;/p>
&lt;h2 id="guiding-principles">Guiding principles&lt;/h2>
&lt;p>To decide if a tool should be packaged in a singularity container in &lt;em>neurocontainers&lt;/em> or be installed in the &lt;em>neurodesktop&lt;/em> container we are currently following these guiding principles:&lt;/p>
&lt;ol>
&lt;li>&lt;em>neurodesk&lt;/em> is not a package manager. This means we are not distributing tools in containers that can easily be installed via a standard package manager&lt;/li>
&lt;li>&lt;em>neurodesk&lt;/em> allows users to have multiple versions of tools in parallel via &lt;a href="https://lmod.readthedocs.io/en/latest/">lmod&lt;/a>, this means that if different versions of a tool can&amp;rsquo;t be installed in parallel we package the tool inside a container.&lt;/li>
&lt;li>&lt;em>neurodesk&lt;/em> aims to provide tooling to link tools from different containers (such as workflow managers like nipype or nextflow). This means that if a tool is required to coordinate various container-tools, it should be in the &lt;em>neurodesktop&lt;/em> container.&lt;/li>
&lt;/ol>
&lt;p>Examples:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>easy install&lt;/th>
&lt;th>coordinates containers&lt;/th>
&lt;th>small in size&lt;/th>
&lt;th>latest version is ok&lt;/th>
&lt;th>useful more most users&lt;/th>
&lt;th>Conclusion&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>neurodesktop&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lmod&lt;/td>
&lt;td>no&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>neurodesktop&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nipype&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>neurodesktop&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>vscode&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>neurodesktop&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>itksnap&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>container?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>convert3D&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fsl&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mrtrix&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>freesurfer&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>no&lt;/td>
&lt;td>container&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="build-container">Build container&lt;/h2>
&lt;p>To build a container:&lt;/p>
&lt;ol>
&lt;li>Add recipe to neurodocker if relevant (&lt;a href="https://github.com/NeuroDesk/neurodocker">https://github.com/NeuroDesk/neurodocker&lt;/a>) and create a pull request to neurodocker&lt;/li>
&lt;li>Build the container &lt;a href="https://github.com/NeuroDesk/neurocontainers">https://github.com/NeuroDesk/neurocontainers&lt;/a>&lt;/li>
&lt;li>Test the container, and if successful add the container to the apps.json file: &lt;a href="https://github.com/NeuroDesk/neurocommand/blob/main/neurodesk/apps.json">https://github.com/NeuroDesk/neurocommand/blob/main/neurodesk/apps.json&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="advanced-section">Advanced section&lt;/h2>
&lt;h3 id="menu-entry">Menu entry&lt;/h3>
&lt;p>As we want to propose several versions of the tools, each piece of software should have its own submenu under &lt;code>VNM Neuroimaging&lt;/code>.
To do so, you first have to add a submenu to &lt;code>menus/vnm-applications.menu&lt;/code> by adding:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;!-- [[Tool Name]] submenu --&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Menu&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Name&amp;gt;&lt;/span>[[Tool Name]]&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Directory&amp;gt;&lt;/span>vnm-[[tool-name]].directory&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Directory&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Include&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;And&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;Category&amp;gt;&lt;/span>[[Tool-Name]]&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Category&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/And&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Include&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/Menu&amp;gt;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;!-- End [[Tool Name]] --&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following table shows the formatting rules to follow:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Placeholder&lt;/th>
&lt;th>Rule&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>[[Tool name]]&lt;/code>&lt;/td>
&lt;td>Capitalized, spaces&lt;/td>
&lt;td>&lt;code>ITK snap&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[[tool-name]]&lt;/code>&lt;/td>
&lt;td>Lower case, no spaces (use &lt;code>-&lt;/code> instead)&lt;/td>
&lt;td>&lt;code>itk-snap&lt;/code> or &lt;code>itksnap&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[[Tool-name]]&lt;/code>&lt;/td>
&lt;td>Capitalized, no spaces (use &lt;code>-&lt;/code> instead)&lt;/td>
&lt;td>&lt;code>ITK-snap&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Next, we have to create the submenu itself as we referenced it by &lt;code>vnm-[[tool-name]].directory&lt;/code>. To do so, create the file &lt;code>menus/submenus/vnm-[[tool-name]].directory&lt;/code> and add the following information inside:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#204a87;font-weight:bold">[Desktop Entry]&lt;/span>
&lt;span style="color:#c4a000">Name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]]&lt;/span>
&lt;span style="color:#c4a000">Comment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]]&lt;/span>
&lt;span style="color:#c4a000">Icon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/home/neuro/.config/lxpanel/LXDE/icons/[[icon-name]].png&lt;/span>
&lt;span style="color:#c4a000">Type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Directory&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If a specific icon is available in the &lt;code>menus/icons&lt;/code> directory, replace &lt;code>[[icon-name]]&lt;/code> by its name. Otherwise, use &lt;code>vnm&lt;/code>.&lt;/p>
&lt;h3 id="create-the-application">Create the application&lt;/h3>
&lt;p>Finally, we have to create the actual application by creating the file &lt;code>menus/applications/vnm-[[tool-name]]-[[0.0.0]].desktop&lt;/code>. The name of this file must contain the version of the tool (once again to allow multiple versions to live inside the same directory). Add the following description to this file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#204a87;font-weight:bold">[Desktop Entry]&lt;/span>
&lt;span style="color:#c4a000">Name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]] [[0.0.0]] [[(Install only)]]&lt;/span>
&lt;span style="color:#c4a000">GenericName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool Name]] [[0.0.0]]&lt;/span>
&lt;span style="color:#c4a000">Comment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">The description of what clicking on this application does. # This will be the tooltip of the application.&lt;/span>
&lt;span style="color:#c4a000">Exec&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">The command used to run the application.&lt;/span>
&lt;span style="color:#c4a000">Icon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/home/neuro/.config/lxpanel/LXDE/icons/[[icon-name]].png&lt;/span>
&lt;span style="color:#c4a000">Type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Application&lt;/span>
&lt;span style="color:#c4a000">Categories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">[[Tool-name]]&lt;/span>
&lt;span style="color:#c4a000">Terminal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true # or false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The important part here is the value of &lt;code>Exec&lt;/code>. If the tool is in the form of a singularity image, you should run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">bash /usr/share/fetch_and_run.sh &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>tool-name&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>0.0.0&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>YYYYMMDD&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>cmd&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span>args&lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>What &lt;code>fetch_and_run.sh&lt;/code> does is check if the image is already installed as a module. If not, it checks whether it can be installed or not (return &lt;code>1&lt;/code> if not possible). After that, it installs the image as a module.
If &lt;code>[[cmd]]&lt;/code> is specified, once the image is installed, it runs the command by giving the arguments from &lt;code>[[args]]&lt;/code>.
Here are two examples for FreeSurfer and FreeView. This first one only installs the image as a module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">bash /usr/share/fetch_and_run.sh freesurfer 6.0.1 &lt;span style="color:#0000cf;font-weight:bold">20200506&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And this does the same but runs FreeView afterward:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">bash /usr/share/fetch_and_run.sh freesurfer 6.0.1 &lt;span style="color:#0000cf;font-weight:bold">20200506&lt;/span> freeview
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The resulting &lt;code>.desktop&lt;/code> file corresponding to FreeView contains:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#204a87;font-weight:bold">[Desktop Entry]&lt;/span>
&lt;span style="color:#c4a000">Name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">FreeView 6.0.1&lt;/span>
&lt;span style="color:#c4a000">GenericName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">FreeView 6.0.1&lt;/span>
&lt;span style="color:#c4a000">Comment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Start FreeView 6.0.1&lt;/span>
&lt;span style="color:#c4a000">Exec&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">bash /usr/share/fetch_and_run.sh freesurfer 6.0.1 20200506 freeview&lt;/span>
&lt;span style="color:#c4a000">Icon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/home/neuro/.config/lxpanel/LXDE/icons/run.png&lt;/span>
&lt;span style="color:#c4a000">Type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">Application&lt;/span>
&lt;span style="color:#c4a000">Categories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">FreeSurfer&lt;/span>
&lt;span style="color:#c4a000">Terminal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Developers: Host a Stratum 1 server</title><link>https://neurodesk.github.io/developers/cvmfs/add_cvmfs_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/developers/cvmfs/add_cvmfs_server/</guid><description>
&lt;p>or a proxy &amp;hellip;&lt;/p></description></item><item><title>Developers: Use transparent singularity</title><link>https://neurodesk.github.io/developers/transparent_singularity/use_transparent_singularity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/developers/transparent_singularity/use_transparent_singularity/</guid><description>
&lt;p>move documentation from here: &lt;a href="https://github.com/NeuroDesk/transparent-singularity/">https://github.com/NeuroDesk/transparent-singularity/&lt;/a>&lt;/p></description></item><item><title>Developers: Neurodesk Architecture</title><link>https://neurodesk.github.io/developers/new_tools/neurodesk-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neurodesk.github.io/developers/new_tools/neurodesk-architecture/</guid><description>
&lt;h1 id="layers">Layers&lt;/h1>
&lt;p>Neurodesktop: &lt;a href="https://github.com/NeuroDesk/neurodesktop">https://github.com/NeuroDesk/neurodesktop&lt;/a>&lt;/p>
&lt;ul>
&lt;li>docker container with interface modifications&lt;/li>
&lt;li>contains tools necessary to manage containers: vscode, git, niype&lt;/li>
&lt;li>CI: builds docker image and tests if it runs&lt;/li>
&lt;/ul>
&lt;p>Neurocommand: &lt;a href="https://github.com/NeuroDesk/neurocommand">https://github.com/NeuroDesk/neurocommand&lt;/a>&lt;/p>
&lt;ul>
&lt;li>script to install and manage multiple containers using transparent singularity on any linux system&lt;/li>
&lt;li>this repo would also handle the creation of menu entries in a general form applicable to different desktop environments&lt;/li>
&lt;li>this repo can be re-used in other projects like CVL and the imaging workstations&lt;/li>
&lt;li>CI: tests if containers can be installed&lt;/li>
&lt;/ul>
&lt;p>transparent-singularity: &lt;a href="https://github.com/NeuroDesk/transparent-singularity">https://github.com/NeuroDesk/transparent-singularity&lt;/a>&lt;/p>
&lt;ul>
&lt;li>script to install neuro-sub-containers, installers are called by neurodesk script&lt;/li>
&lt;li>this repo could provide a simple way of using our containers on HPCs for large scale processing of the pipelines build in VNM&lt;/li>
&lt;li>CI: test if exposing of binaries work&lt;/li>
&lt;/ul>
&lt;p>Neurocontainers: &lt;a href="https://github.com/NeuroDesk/neurocontainers">https://github.com/NeuroDesk/neurocontainers&lt;/a>&lt;/p>
&lt;ul>
&lt;li>build scripts for neuro-sub-containers&lt;/li>
&lt;li>CI: building, pushing and testing of containers&lt;/li>
&lt;/ul>
&lt;p>Neurodocker: &lt;a href="https://github.com/NeuroDesk/neurodocker">https://github.com/NeuroDesk/neurodocker&lt;/a>&lt;/p>
&lt;ul>
&lt;li>fork of neurodocker project&lt;/li>
&lt;li>provides recipes for our containers built&lt;/li>
&lt;li>we are providing pull requests back of recipes&lt;/li>
&lt;li>CI: handled by &lt;a href="https://github.com/ReproNim/neurodocker">neurodocker&lt;/a> - testing of generating container recipes&lt;/li>
&lt;/ul></description></item></channel></rss>